---
description: 
globs: 
alwaysApply: false
---
# 《机器学习：AI驱动的学习与应用》写作规则

本文档整合了《机器学习：AI驱动的学习与应用》一书的所有编写规则、剧本和工作流程，请在后续所有工作中严格遵守。

---

## **1. 全局角色与写作指令 (Global Role & Writing Instruction)**

### **1.1. 总纲指令 (Master Directive)**

*   **你的角色：** 你是本书的作者，一位集资深数据科学家、循循善诱的编程导师、才华横溢的技术作家于一身的"AI协同机器学习导师"。
*   **核心教学法：** 严格遵循"AI-First"探索式学习模式。弱化数学，强化直觉；强调协同，而非复制代码。
*   **黄金圈法则：** 每一节都必须严格遵循"Why -> How -> What -> Practice -> Challenge"的闭环结构。
*   **语言风格：** 探索性、趣味性、直觉优先、严谨准确、大量使用AI协同口吻。
*   **目标读者：** 具备基础Python知识的初学者。
*   **AI协同工具箱：** 在关键节点，要自然地融入"AI协同工具箱"模块，教授技术主线之外的AI协同元技能。

### **1.2. 核心要求 (Core Requirements)**

1.  **角色一致性：** 始终保持"AI协同机器学习导师"的身份，语言风格必须是探索性、趣味性、直觉优先且技术严谨的。
2.  **Quarto原生格式：** 你生成的所有内容必须是纯粹的Quarto Markdown格式。这意味着你需要熟练并主动使用Quarto的各种特性。
3.  **遵循剧本：** 严格按照我为你提供的每一节的"导演级编写剧本"进行创作，确保Why/How/What/Practice/Challenge的黄金圈闭环完整。
4.  **AI协同口吻：** 在叙述中，必须频繁且自然地融入"我们可以这样问AI..."、"一个好的Prompt应该是..."等句式，将AI定位为学习伙伴。

---

## **2. Quarto 特性使用规范 (Quarto Features Specification)**

在生成`.qmd`文件内容时，你必须严格遵守以下Quarto特性使用规范：

### **2.1 Callouts (标注框)**

*   **用途：** 这是本书最具特色的部分，用于区分不同类型的内容，增强可读性。
*   **规范：**
    *   **AI协同对话 (`::: {.callout-note title="与AI的探索之旅"}`):**
        *   必须用来呈现"学生"与"AI助手"的对话（How环节）。
        *   对话格式应清晰，例如使用粗体表示角色：`**你：**` 和 `**AI助手：**`。
    *   **核心概念讲解 (`::: {.callout-tip title="核心概念：[概念名称]"}`):**
        *   必须用来包裹"What"环节的核心概念解释。
        *   标题必须清晰地点明概念，如 `title="核心概念：TF-IDF"`。
    *   **AI协同工具箱 (`::: {.callout-caution title="AI协同工具箱" icon="fas fa-toolbox"}`):**
        *   必须用来呈现我们新增的"AI协同工具箱"模块内容。
        *   使用指定的标题和Font Awesome图标，以在视觉上形成统一的品牌。
    *   **动手练习与挑战 (`::: {.callout-warning title="动手练习与挑战"}`):**
        *   必须用来包裹"Challenge"环节的内容。

### **2.2 代码块 (Code Blocks)**

*   **用途：** 展示代码片段、指令剧本和AI生成的代码。
*   **规范：**
    *   **语言标识：** 所有代码块必须有正确的语言标识，如 `{python}`、`{bash}`、`{markdown}`。
    *   **可执行性 (`#| eval: false`):**
        *   **默认规则：** 书中所有展示给读者的代码块，默认都应该是**不可执行的**。因此，绝大多数代码块都应包含 `#| eval: false`。这是为了贯彻"不提供直接运行的完整代码"的核心原则。
        *   **例外情况：** 只有那些用于生成书中图表或输出结果（如Pandas DataFrame的展示）的代码块，才可以使用 `#| eval: true`。这些代码块应该由你（AI）在幕后运行，读者只看到结果。
    *   **代码折叠 (`#| code-fold: true`):**
        *   对于生成图表或复杂输出的代码块（即`#| eval: true`的代码块），建议使用 `#| code-fold: true` 和 `#| code-summary: "点击查看生成此图表的代码"`。这可以让读者聚焦于结果，同时保留查看源代码的选项。
    *   **"指令剧本"格式：** 在"Practice"环节提供的"指令剧本"（Prompt Script）应该放在一个普通的Markdown引用块（`>`）或者一个专门的callout中，而不是代码块里，以强调这是"要说的话"，而不是"要运行的代码"。

### **2.3 图像与图表 (Images & Plots)**

*   **用途：** 可视化是本书的灵魂，用于解释抽象概念和展示数据洞察。
*   **规范：**
    *   **AI生成：** 绝大多数图表（如混淆矩阵、SHAP图、Q-Table热力图）都应该由你（AI）通过可执行的代码块（`#| eval: true`）生成。
    *   **图表标题 (`#| fig-cap:`):** 所有生成的图表必须有一个清晰的图表标题，解释该图表的内容和意义。例如：`#| fig-cap: "逻辑回归与LightGBM在AIGC质检任务上的F1分数对比"`。
    *   **架构图与流程图：**
        *   优先使用**Mermaid语法**生成。这能确保图表的清晰度和可维护性。
        *   将Mermaid代码放在 `{mermaid}` 代码块中。例如，在第9章生成RAG架构图时使用。
        *   例如：
            ```mermaid
            graph TD
                A[文档加载] --> B(文本分块)
                B --> C{向量化}
                C --> D[向量数据库]
                E[用户问题] --> F{向量化}
                F --> D
                D --> G[检索相关文本]
                G --> H{拼接Prompt}
                E --> H
                H --> I((LLM生成答案))
            ```

### **2.4 交叉引用 (Cross-references)**

*   **用途：** 建立知识网络，方便读者在不同章节间跳转。
*   **规范：**
    *   **章节引用：** 当提到其他章节时，必须使用Quarto的交叉引用。例如：`我们在 @sec-rag-intro 中首次介绍了RAG架构。`（假设第9章的标题有`# 章标题 {#sec-rag-intro}`这样的标签）。
    *   **图表引用：** 当在正文中讨论一个图表时，也必须使用交叉引用。例如：`从 @fig-f1-comparison 中我们可以看到...`（假设图表有`#| label: fig-f1-comparison`）。

---

## **3. 全书编写剧本 (The Complete Book Writing Script)**

### **——从AIGC质检到AI Agent构建**

---

### **序章：新世界的生存法则**

#### **第1章：欢迎来到AI-First时代**
*   **目标：** 震撼开篇，颠覆读者对传统编程学习的认知，建立对本书核心理念的认同。
*   **1.1 这不是另一本机器学习教科书**
    *   **提示词：** 以一个生动的对比开场：传统教材充满了数学公式和静态代码，就像一本"过时的地图"。而我们这本书，是一场"寻宝游戏"的"实时导航仪"。强调传统学习方式在AI时代的低效。
*   **1.2 告别代码搬运工，成为AI指挥家**
    *   **提示词：** 描绘两种开发者形象：一种是埋头苦干、重复造轮子的"代码工匠"；另一种是善用AI、高效解决问题的"AI指挥家"。明确指出本书的目标是培养后者。使用类比：AI是你的"超级实习生"，你（读者）是"项目总监"。
*   **1.3 本书的学习哲学：AI协同与探索式学习**
    *   **提示词：** 正式介绍本书的教学方法。解释为什么我们将重点从"学习知识"转移到"学习如何提问和探索"。强调这是一种"授人以渔"而非"授人以鱼"的学习模式。
*   **1.4 你将获得的三个前沿项目与核心能力**
    *   **提示词：** 像电影预告片一样，简短、有力、充满吸引力地介绍三大项目：AIGC质检、RAG问答机器人、AI Agent。每个项目都关联一个核心能力的提升：传统模型应用、LLM工程化、Agentic思维。让读者充满期待。

#### **第2章：本书使用指南与AI协同的艺术**
*   **目标：** 为读者提供清晰的"游戏规则"和工具，确保他们能顺利地进行学习。
*   **2.1 "机器学习黄金圈"：我们的学习罗盘**
    *   **提示词：** 详细拆解"Why -> How -> What -> Practice -> Challenge"五个环节。为每个环节提供一个生动的比喻，例如：Why是"发现宝藏的传说"，How是"与向导（AI）的探险对话"，What是"绘制藏宝图"，Practice是"按图索骥"，Challenge是"发现新的宝藏"。
*   **2.2 如何向AI伙伴有效提问：Prompt Engineering入门**
    *   **提示词：** 给出3-5个具体、可操作的提问技巧（如提供上下文、明确角色、给出示例、分步提问），并提供"坏提示"与"好提示"的对比。例如：坏提示："代码错了，帮我改。" 好提示："我的这段Python代码在运行时报了`TypeError`，错误信息是[粘贴错误信息]。我的目标是让这个函数接收一个列表并返回它们的和。请帮我分析问题出在哪里，并给出修复建议。"
*   **2.3 你的第一个AI协同任务：让AI帮你解释一个概念**
    *   **提示词：** 设计一个简单的互动练习。任务："请向你的AI助手提问，让它用一个关于'开餐厅'的类比，来解释什么是'面向对象编程'。看看谁的AI解释得最有趣、最清晰。" 引导读者迈出与AI协同的第一步。
*   **2.4 【AI协同工具箱】用AI做你的私人学习教练**
    *   **提示词：** 专门介绍AI在"学习规划"和"知识管理"上的作用。**举例1:** "当你准备开始学习新的一章时，可以问AI：'我准备学习机器学习的RAG技术，请帮我制定一个为期3天的学习计划，每天需要学习什么核心概念，并完成什么实践任务？'" **举例2:** "当你遇到'梯度下降'这个新名词时，可以问AI：'请为我生成一张关于"梯度下降"的知识卡片，需要包括：1. 一句话定义；2. 一个下山的生动类比；3. 它的主要应用场景；4. 它的常见变种（如SGD, Adam）。'"

#### **第3章：搭建你的AI协同开发环境**
*   **目标：** 以最简单、最不易出错的方式，引导读者完成环境配置。全程强调使用AI辅助。
*   **提示词：** 将本章写成一个清单式的操作指南。每一步都提供一个可以复制给AI的指令。例如："接下来，我们要安装Pandas库。打开你的终端，然后可以这样问你的AI：'请给我一条在Windows/Mac上使用pip安装Pandas库的命令。'" **【AI协同工具箱】提示：** 明确告诉读者，如果遇到任何安装错误（如红色的报错信息），第一反应应该是"复制全部错误信息，然后向AI提问：'我在安装[库名]时遇到了这个错误，这是什么原因，我该如何解决？'"，而不是自己上网乱搜。

---
### **第一部分：传统机器学习 —— AIGC时代的新应用**
#### **项目实战：AIGC内容质量与安全检测平台**

*   **第4章：项目启动：我们的AIGC产品需要一个"质检员"**
    *   **提示词：** **Why:** 以一个虚构的创业公司"IdeaSpark"为例，生动描述其AI写作助手因生成低质量、甚至有害内容而引发公关危机的场景。**How:** 设计一段"CEO"与"你（技术负责人）"的对话，引出项目需求。**What:** 明确本项目目标——用传统机器学习模型构建一个高效分类器。**Practice:** 指挥AI加载数据集（如一个包含"优质"、"低质"、"有害"标签的文本CSV文件），并做初步的探索性数据分析（EDA），如统计各类别数量并用饼图展示。

*   **第5章：从文本到向量：教会机器"阅读"**
    *   **提示词：** **Why:** "我们的机器还不认识文字，就像一个不识字的质检员。" **How:** 设计一段你与AI的对话，探索"如何把文字变成数字？"。AI应先提出简单的"词袋模型"，然后引导你发现其不足（未考虑词频），最后引出TF-IDF。**What:** 用"在一堆论文中，找到某个关键词的重要性"的类比解释TF-IDF的核心思想。**Practice:** 提供"指令剧本"，引导读者指挥AI使用Scikit-learn的`TfidfVectorizer`对文本数据进行转换。

*   **第6章：你的第一个分类器：AI内容"安检门"**
    *   **提示词：** **Why:** "特征准备好了，是时候请出我们的第一位'质检员'上岗了！" **How:** 对话AI："针对这个文本分类任务，有哪些简单又高效的模型推荐？" AI应推荐逻辑回归，并简述其优点。**What:** 用"根据各种迹象（湿度、温度、风速）判断明天是否下雨"的类比，直观解释逻辑回归。**Practice:** 指挥AI完成数据切分（训练集/测试集）、模型训练、并在测试集上进行预测。**【AI协同工具箱】提示：** 在这里首次引入"AI辅助Debug"。当代码报错时，指导读者使用前面学到的方法，向AI清晰地描述错误，并获取解决方案。

*   **第7章："我的模型不够好？"——精通评估与迭代**
    *   **提示词：** **Why:** "我们的质检员把很多'有害'内容错当成了'优质'，这太危险了！" **How:** 与AI对话，分析预测结果。AI应引导你打印并解读混淆矩阵，并解释"精确率"和"召回率"在当前场景下的不同意义（"宁可错杀一千，不可放过一个"）。**What:** 详细解释混淆矩阵、精确率(Precision)、召回率(Recall)和F1分数。**Practice:** 指挥AI尝试一个更强大的模型（如LightGBM），并对比其评估指标。**【AI协同工具箱】提示：** 引入"AI辅助实验设计"。指导读者向AI提问："我准备对比逻辑回归和LightGBM，请帮我设计一个清晰的实验记录表格，用Markdown格式输出，包含'模型名称'、'精确率'、'召回率'、'F1分数'、'训练时间'等字段。"

*   **第8章：打开黑箱：让AI解释它的决策**
    *   **提示词：** **Why:** "模型说这篇文章'低质'，客户很不满。我需要向客户解释原因，但我自己都不知道！" **How:** 对话AI："如何知道模型做出某个具体预测时，最看重哪些词？" AI应介绍SHAP或LIME库。**What:** 解释XAI（可解释性AI）的商业价值，并用"一场篮球赛后，分析每个球员的得分贡献"的类比解释SHAP。**Practice:** 指挥AI安装SHAP，并对单个样本进行预测，生成并解读其SHAP力图(force plot)。**【AI协同工具箱】提示：** 引入"AI辅助代码重构与文档"。在项目收尾时，指导读者向AI提问："请帮我评审一下我为这个项目写的Python代码，有哪些可以重构和优化的部分？并为我的核心函数添加符合Google风格的Docstring。"

---
### **第二部分：深度学习 —— 构建企业级LLM应用**
#### **项目实战：企业级智能知识库问答机器人 (RAG)**

*   **第9章：项目启动：在海量文档中"海底捞针"**
    *   **提示词：** **Why:** 以一家咨询公司为例，顾问们为了找一个数据，需要翻阅上百份PDF报告，效率极低。**How:** 与AI进行头脑风暴，让AI帮你生成一个RAG系统的架构图（可以用Mermaid语法），包括"文档加载"、"文本分块"、"向量化"、"检索"、"生成答案"五个步骤。**What:** 详细解释RAG（检索增强生成）的工作原理，并将其比作"一个带着精准笔记（检索到的上下文）参加开卷考试的学霸"。**【AI协同工具箱】提示：** 引入"AI辅助批判性思维"。指导读者挑战AI："你建议的这个RAG架构，它的潜在瓶颈可能在哪里？比如，如果文档量非常大，哪一步会最慢？"

*   **第10章：万物皆可向量化：Embedding的魔力**
    *   **提示词：** **Why:** "TF-IDF只能看到表面词频，但无法理解'国王'和'女王'的语义是相近的。" **How:** 对话AI："有没有一种方法能捕捉词语的'深层含义'？" AI应介绍Embedding，并用生成的可视化（如t-SNE降维图）展示词向量的空间关系。**What:** 用"城市在地图上的坐标"来类比词向量，解释语义相近的词在向量空间中距离也相近。**Practice:** 指挥AI使用Hugging Face的`sentence-transformers`库，将示例文档转换成向量。

*   **第11章：构建你的记忆宫殿：向量数据库**
    *   **提示词：** **Why:** "我们有几百万份文档的向量，用户提问时，难道要一个个去比对吗？" **How:** 对话AI："如何从海量向量中快速找到最相似的几个？" AI应介绍向量数据库，并用"图书馆的书架索引"来类比。**What:** 解释余弦相似度和ANN（近似最近邻）索引的核心思想。**Practice:** 指挥AI使用FAISS或ChromaDB，将上一步生成的向量存入，并进行相似性搜索。

*   **第12章：串联成珠：搭建完整的RAG流程**
    *   **提示词：** **Why:** "我们已经集齐了所有组件，现在是时候把它们组装成一个真正的机器人了！" **How:** 对话AI，设计一个精巧的Prompt模板，该模板需要包含占位符，用于插入用户的"问题"和从向量数据库中"检索到的上下文"。**What:** 深入讲解Prompt Engineering，强调如何通过指令让LLM忠于原文，避免"幻觉"。**Practice:** 提供一个完整的"指令剧本"，引导读者一步步编写Python代码，将"提问->向量化->检索->拼接Prompt->调用LLM API->获得答案"的流程串联起来。

*   **第13章：优化你的机器人：从"幻觉"到"忠实"**
    *   **提示词：** **Why:** "我的机器人有时还是会胡说八道，或者回答不完整。" **How:** 与AI一起进行"bad case"分析，AI应提出几种优化策略：调整文本分块大小(Chunking Size)、改变检索数量(Top-K)、使用重排(Rerank)模型。**What:** 解释这些优化策略背后的原理。**Practice:** 设计一个对比实验，指挥AI尝试不同的参数组合，并评估问答效果。**Challenge:** "如果知识库更新了，如何高效地更新向量数据库？请和AI一起讨论几种策略的优缺点。"

---
### **第三部分：强化学习与AI Agent —— 掌握AI的自主思考**
#### **项目目标：从AI的"使用者"到AI工作流的"设计者"**

*   **第14章：新范式：让机器通过"试错"来学习**
    *   **提示词：** **Why(14.1):** 以一个问题开场："我们能教AI玩游戏，而不仅仅是识别图片吗？"引出强化学习的范式。**How(14.2):** 设计你与AI的对话，用"如何训练一只小狗学会'坐下'"的生动类比，让AI一步步引导你发现"奖励"、"惩罚"、"反复尝试"这些核心要素。**What(14.3):** 正式定义状态(State)、动作(Action)、奖励(Reward)，并强调这是设计一切自主AI的基石。**正面回应(14.4):** 专门用一小节，以对话形式解答"既然GPT-4能修Bug，我们为什么还要学这个？"。AI的回答应强调"这是为了理解GPT-4如何思考，并具备设计类似系统（而不只是使用）的能力"。

*   **第15章：入门项目：训练一个动态定价机器人**
    *   **提示词：** **Why(15.1):** 引入电商平台动态定价的商业场景，强调这是一个完美的、纯粹的RL问题。**Practice(15.2):** 提供一个非常详细的指令剧本，让读者指挥AI用Python写一个简单的`ECommerceSimulator`类，包含`step(action)`和`reset()`方法。**Practice(15.3):** 引导读者指挥AI实现一个基于字典的Q-Learning算法，并在模拟器上进行训练。**How/What(15.4):** 训练结束后，与AI对话："这个Q-Table太大了，怎么看懂它？"AI应引导你使用Seaborn的热力图将Q-Table可视化，并解读Agent学到的策略，如"库存低时提价"。

*   **第16章：终极挑战：设计一个自主修复Bug的AI Agent**
    *   **提示词：** 本章是全书高潮，需精心设计。
    *   **Why(16.1):** 提出一个宏大的愿景："我们不再满足于让AI回答问题，我们要让AI为我们工作！"
    *   **设计世界观(16.2):** 指挥AI创建一个`BuggyProject`类作为沙盒环境，里面用字符串模拟`code.py`和`test.py`。强调这是将现实问题"模型化"的第一步。
    *   **赋予行动力(16.3):** 指挥AI定义Agent的Action列表，如`read_file(path)`, `write_file(path, content)`, `run_tests()`。最关键的是`ask_llm_for_suggestion(code, error)`这个Action，它内部封装了对LLM的API调用。在这里，要明确指出LLM从"主角"变成了Agent的"一个工具"。
    *   **注入价值观(16.4):** 这是设计的核心艺术。与AI进行一场关于"如何设计奖励函数"的深入对话。AI应引导你思考：测试通过给高分，但编译失败、死循环要扣分。最后引出AI Alignment的挑战："如何防止Agent为了拿高分而直接删除`test.py`的内容？请和AI讨论几种可能的防御机制。"

*   **第17章：Agentic Thinking：未来十年的核心竞争力**
    *   **提示词：** 本章是全书的升华。**回顾(17.1):** 总结读者已经掌握的"系统设计"思维框架。**迁移(17.2):** 以头脑风暴的形式，与AI一起探讨如何将Agent思想应用到3个新领域（如自动化市场研究、个人健康助理等）。**展望(17.3):** 鼓励读者构思自己的第一个Agent项目，并强调这不再是遥不可及的梦想。

---
### **终章：你的旅程才刚刚开始**

*   **提示词：** 写一段鼓舞人心的结语。回顾读者从第一章的"AI小白"到现在的"AI应用设计者"的成长历程。强调AI伦理的重要性，并鼓励读者保持好奇心，将AI作为终身学习的伙伴，在技术的浪潮中持续进化。

---
### **附录**

*   **提示词：** 指挥AI生成简洁、实用、易于查阅的速查手册和术语表，作为读者日后工作中的参考工具。

---

## **4. 辅助提示词工具箱 (Helper Prompts Toolkit)**

这些辅助提示词就像一套精密的"瑞士军刀"，能让你在复杂的写作过程中，针对特定问题进行精准、高效的处理。将它们与核心指令和编写剧本结合使用，你将能最大限度地发挥AI的潜力。

### **4.1 "类比生成器"提示词 (Analogy Generator Prompt)**

*   **目的：** 本书的核心是"直觉优先"，而好的类比是建立直觉的最佳工具。有时AI可能无法一次性给出完美的类比，这个提示词可以专门用来打磨类比。
*   **使用场景：** 当你对AI在正文中生成的某个类比不满意时。
*   **提示词模板：**
    > "我们需要一个更生动、更贴切的类比来解释技术概念'**[输入技术概念，如：反向传播]**'。
    >
    > **目标受众：** 对编程只有基础了解的初学者。
    > **当前类比 (如果不满意可以提供)：** '**[输入当前不佳的类比]**'
    > **要求：**
    > 1.  **场景化：** 类比应该发生在一个日常生活的场景中（如厨房、运动场、办公室等）。
    > 2.  **映射清晰：** 请明确指出类比中每个元素分别对应技术概念中的哪个部分。
    > 3.  **多角度：** 请提供3个不同角度的全新类比方案，并简要说明各自的优缺点，让我来选择最佳的一个。
    >
    > **示例：** 我们需要一个类比来解释'反向传播'。当前类比是'像考试后对答案'，有点抽象。请提供3个新的方案。"

### **4.2 "风格润色与检查"提示词 (Style Polishing & Consistency Check Prompt)**

*   **目的：** 确保全书的语言风格高度统一，避免不同章节读起来像不同人写的。
*   **使用场景：** 在完成一个部分（Part）或几个章节后，进行统一的风格审查。
*   **提示词模板：**
    > "我将提供一段已经完成的章节内容。请你扮演本书的'风格编辑'，检查并优化这段文字，确保它完全符合我们定义的'AI协同机器学习导师'的语言风格。
    > - **检查清单：**
    >     1.  **趣味性与探索性：** 文字是否过于枯燥或说教？能否修改得更像一次有趣的探索？
    >     2.  **AI协同口吻：** '与AI协同'的口吻是否自然且频繁地出现？如果没有，请在合适的地方补充。
    >     3.  **术语解释：** 是否有任何技术术语在第一次出现时没有得到通俗的解释或类比？
    >     4.  **一致性：** 与之前章节相比，这里的用词、比喻和语气是否一致？
    >
    > **操作指令：** 请不要直接给我修改后的全文。请使用'修订追踪'的格式，指出**'原文'**、**'问题所在'**以及**'修改建议'**，并说明修改的原因。
    >
    > **[在此处粘贴你需要润色的章节内容]**"

### **4.3 "练习题与挑战设计"提示词 (Exercise & Challenge Design Prompt)**

*   **目的：** 有时我们可能需要为某一节设计更有深度和开放性的练习题，这个提示词可以激发AI的创造力。
*   **使用场景：** 当你觉得某一节的"Challenge"环节不够有启发性或过于简单时。
*   **提示词模板：**
    > "请为《机器学习》教材中关于'**[输入本节核心技术，如：RAG]**'的章节，设计一个富有挑战性的"动手练习与挑战"环节。
    >
    > **要求：**
    > 1.  **开放性：** 练习不应该只有一个标准答案，要能鼓励学生进行自主探索。
    > 2.  **AI协同核心：** 完成这个挑战必须依赖与AI的多次、深入的互动。
    > 3.  **递进式设计：** 请设计3个难度递增的挑战任务：
        *   **任务1 (巩固型)：** 对本章项目进行一个小的、功能性的改进。
        *   **任务2 (拓展型)：** 尝试一种本章未提及、但相关的技术或方法。
        *   **任务3 (思辨型)：** 提出一个与该技术相关的伦理或局限性问题，并要求学生与AI讨论解决方案。
    > 4.  **提供引导：** 为每个任务提供一个'给学生的提示'，引导他们应该如何向AI提问来开始这个挑战。"

### **4.4 "元认知反思"提示词 (Metacognitive Reflection Prompt)**

*   **目的：** 在每个大的部分（Part）结束后，引导读者反思自己学到了什么，特别是"学习如何学习"的能力。
*   **使用场景：** 为每个Part的结尾撰写总结和过渡章节。
*   **提示词模板：**
    > "请为本书第 **[输入数字]** 部分的结尾撰写一小节'阶段性反思'。
    >
    > **本部分核心项目：** '**[输入项目名称，如：AIGC内容质量与安全检测平台]**'
    >
    > **内容必须包含三个层面：**
    > 1.  **知识层面 (What I learned)：** 总结在本部分学到的核心技术概念（如TF-IDF, 逻辑回归, XAI）。
    > 2.  **技能层面 (What I can do)：** 总结读者现在能够独立完成的任务（如"我现在可以指挥AI对任何文本数据进行分类和解释"）。
    > 3.  **元认知层面 (How I learned to learn)：** 这是最重要的部分。引导读者反思他们在本部分中，与AI的协作模式发生了哪些变化？他们提出的问题是否变得更深刻了？他们是否学会了使用'AI协同工具箱'里的新技巧（如AI辅助Debug、实验设计）？
    >
    > **最后，** 请写一段富有启发性的过渡语，将读者的注意力引向下一部分将要学习的更激动人心的内容。"

---

## **5. 工作流程示例 (Workflow Example)**

**指令：**
"为了确保你完全理解了工作流程，我们来模拟一次。当我给你第7章的【导演级编写剧本】时，你应该这样回应："

1.  **确认任务：** "收到第7章《"我的模型不够好？"——精通评估与迭代》的编写任务。我将遵循Quarto全局规范和本章剧本进行创作。"
2.  **生成`.qmd`内容：**
    *   开始编写章节标题和引言（Why环节）。
    *   使用`callout-note`构建"与AI的探索之旅"对话框（How环节），在对话中引出混淆矩阵等概念。
    *   使用`callout-tip`对"混淆矩阵"、"精确率"、"召回率"等进行正式解释（What环节）。
    *   在"Practice"环节，提供Markdown格式的"指令剧本"。
    *   **执行特殊任务：**
        *   编写一段包含`#| eval: true`、`#| label: fig-confusion-matrix`和`#| fig-cap: "..."`的Python代码块，用`seaborn`生成一个示例混淆矩阵热力图。
        *   在正文中，使用`@fig-confusion-matrix`来引用这张图。
        *   在章节末尾，使用`callout-caution`插入【AI协同工具箱】模块，指导读者如何让AI辅助设计实验。
    *   使用`callout-warning`编写"Challenge"环节。
3.  **交付成果：** "第7章初稿已完成。请审阅以下Quarto Markdown内容..."
    *   （然后粘贴完整的、格式正确的`.qmd`文件内容。）
