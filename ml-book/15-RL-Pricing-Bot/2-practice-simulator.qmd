---
title: "15.2 Practice (1): 指挥AI构建“电商模拟器”"
---

## 扮演"上帝"，创造你的第一个世界

::: {.callout-note title="【AI导演】场景设定"}
**场景**: 在我们训练智能体之前，我们首先需要为它提供一个"训练场"。在强化学习中，这个训练场就是**环境 (Environment)**。与真实世界不同，我们可以在计算机中创造一个**模拟环境**，让智能体在其中以极高的速度进行数百万次的"模拟销售"，从而安全、高效地完成学习。

你的任务是：**指挥你的AI编程助手，用Python代码构建一个名为 `PricingSimulator` 的类。** 这个类就是我们的微型世界，它将模拟机票销售的核心逻辑。

这是你第一次将抽象的"环境"概念，转化为具体的、可执行的代码。

**AI Copilot，启动！**
:::


### 指令剧本：与AI共建环境

现在，打开你的Jupyter Notebook或VS Code，准备开始向你的AI助手下达指令。我们将分步构建这个模拟器。

#### **第一步：定义世界的基本规则 (初始化)**

你需要告诉AI，这个世界在诞生之初是什么样子的。

::: {.callout-tip title="给AI的提示词 (1/3)"}
> 请帮我用Python编写一个名为 `PricingSimulator` 的类。
>
> 首先，为它创建一个 `__init__` (构造)方法。这个方法需要初始化以下几个核心属性：
>
> 1.  `self.total_seats`: 总座位数，固定为 `150`。
> 2.  `self.total_days`: 总销售天数，固定为 `30`。
> 3.  `self.action_space`: 一个包含所有可能价格（动作）的列表，设定为 `[500, 800, 1000, 1200, 1500]`。
> 4.  `self.demand_factor`: 需求因子，用于模拟市场需求强度，暂时设为 `80`。
>
> 另外，在 `__init__` 方法中，调用一个 `self.reset()` 方法（我们稍后会定义它），来初始化每一轮模拟的状态。
:::


::: {.callout-caution title="AI可能的输出" icon="fas fa-robot" code-fold=true}

```python
import numpy as np

class PricingSimulator:
    def __init__(self):
        """
        初始化电商模拟器环境
        """
        self.total_seats = 150
        self.total_days = 30
        self.action_space = [500, 800, 1000, 1200, 1500]
        self.demand_factor = 80  # 需求因子
        
        self.reset()

    # reset 和 step 方法将会在下面定义
```
:::



#### **第二步：定义"重置世界"的功能 (Reset)**

每一轮模拟（在RL中称为一个 `episode`）结束后，我们需要能将世界恢复到初始状态，以便开始新一轮的模拟学习。

::: {.callout-tip title="给AI的提示词 (2/3)"}
> 接下来，请在 `PricingSimulator` 类中添加一个名为 `reset` 的方法。
>
> 这个方法的作用是将环境重置到初始状态。它需要做两件事：
> 1.  将 `self.remaining_days` 设置为 `self.total_days`。
> 2.  将 `self.remaining_seats` 设置为 `self.total_seats`。
> 3.  最后，返回初始的状态，这个状态是一个元组：`(self.remaining_days, self.remaining_seats)`。
:::




```python
# (在 PricingSimulator 类中)

    def reset(self):
        """
        重置环境到初始状态
        """
        self.remaining_days = self.total_days
        self.remaining_seats = self.total_seats
        return (self.remaining_days, self.remaining_seats)
```
:::