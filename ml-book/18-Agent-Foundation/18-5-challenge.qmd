# 18.5 Challenge: 拓展你的Agent工具箱

::: {.callout-warning title="动手练习与挑战"}

恭喜你成功构建了第一个能使用工具的AI Agent！现在，它已经有了可以查询库存的"手"。

本次的挑战任务，是让你亲自动手，为它的"工具箱"里增加一件新工具，让它的能力变得更强。

### 你的任务

为我们上一节创建的Agent，增加一个名为 `get_shipping_status` 的新工具。

---

#### 任务1：创建新工具

1.  **定义工具函数:** 在你的`Toolbox`类中，创建一个新方法 `get_shipping_status(order_id: str) -> str`。
2.  **添加文档字符串:** 为这个新方法添加一个清晰的、符合`@tool`规范的文档字符串。例如："用于根据订单ID查询物流状态"。这是Agent能否理解并使用该工具的关键。
3.  **模拟逻辑:** 为了模拟真实场景，该函数可以返回一个随机的物流状态。例如，从 `["处理中", "已发货", "运输中", "已送达"]` 列表中随机选择一个并返回。
4.  **注册工具:** 不要忘记将这个新工具添加到你传递给LLM的`tools`列表中。

---

#### 任务2：测试新工具

修改你的代码，向Agent提出一个新问题，以验证它是否能够正确理解并使用你的新工具。

*   **提问示例:** "你好，我想查一下订单号 `CDB-12345` 的物流状态怎么样了？"

观察Agent的运行过程，看看它是否能够：
1.  正确地识别出你的意图是查询物流，而不是查询库存。
2.  决定调用`get_shipping_status`工具，而不是`check_inventory`。
3.  正确地从你的问题中提取出`order_id`（'CDB-12345'）作为工具的参数。
4.  最后，将工具返回的物流状态（如"已发货"）作为最终答案回复给你。

---

#### 任务3 (思辨型)

和你的AI助手讨论一下：

> "如果一个用户的问题非常模糊，比如'我的订单怎么样了？'，这个提问里既没有订单号，也没有明确指出是查物流还是查内容。我们当前的Agent会如何反应？可能会遇到什么问题？我们有什么办法可以优化它，让它能主动向用户追问缺失的信息？"

这个挑战将帮助你更深入地理解Agent在真实世界中处理不完整信息时所面临的挑战，并开始思考如何构建更具鲁棒性的对话式AI系统。
::: 