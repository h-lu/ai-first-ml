# 19.5 Challenge: 为你的AI团队增加新成员

::: {.callout-warning title="动手练习与挑战"}

你已经成功地构建并指挥了一个由多个AI Agent组成的团队，这是一个巨大的进步！你已经从一个"员工管理者"晋升为了"团队架构师"。

现在的挑战是，基于现有的团队架构，为其增加一位新成员，以应对更复杂的业务需求。

### 你的任务

为"退款处理小组"增加一位"**质检与报告专员 (QA & Reporting Specialist)**"。

这位新专员的职责是，在财务经理完成退款操作**之后**，对整个处理流程进行记录和归档。

---

#### 任务1：定义新Agent和工具

1.  **创建新工具:** 创建一个名为 `archive_refund_case` 的新工具。
    *   **功能:** 它的功能是模拟"将本次退款案例归档到数据库"。你可以让它接受一个`case_details: str`参数。
    *   **实现:** 在函数内部，你可以简单地打印出`f"【质检归档】退款案例已归档：{case_details}"`来模拟归档操作。
    *   **文档字符串:** 为它编写清晰的文档字符串，例如："用于在退款流程结束后，将整个案例的详情记录归档。"
2.  **创建新Agent:** 创建一个`qa_agent`。
    *   **角色:** 它的System Prompt应该明确它的职责，例如："你是一个质检员，你的任务是在退款流程结束后，调用`archive_refund_case`工具将案例归档。"
    *   **工具:** 将`archive_refund_case`工具绑定给这个Agent。

---

#### 任务2：修改团队工作流

这是本次挑战的核心。你需要修改`LangGraph`的图结构，将新的`qa_agent`加入到现有工作流中。

1.  **修改主管决策:**
    *   你需要修改主管Agent的System Prompt，让它知道有`qa_agent`这个新成员的存在。
    *   更重要的是，你需要修改它的路由逻辑。当它判断出`财务经理`已经完成了退款后，它不应该直接结束(`FINISH`)，而应该将任务的`next`（下一步）指向 `qa_agent`。
2.  **更新图结构:**
    *   在`LangGraph`中添加`qa_agent`作为新节点。
    *   修改条件边，确保主管的决策能正确地将流程路由到`qa_agent`节点。
    *   `qa_agent`完成工作后，流程应该再次回到主管，由主管最终决定结束整个流程。

---

#### 任务3 (思辨型)

与你的AI伙伴讨论：

> "我们现在的团队成员越来越多了。如果未来增加到10个、20个Agent，都通过一个'主管'来轮询和决策，会不会有效率瓶颈？有没有其他更高级的团队协作模式（比如让Agent之间可以不通过主管，直接点对点沟通）？这些不同的协作模式各自有什么优缺点？"

这个思考将引导你探索多Agent系统研究中更前沿的领域，比如不同的通信协议和组织架构，为构建更大规模的AI协作系统打下理论基础。
::: 