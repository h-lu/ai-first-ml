# 19.3 What: 多Agent协作流程图

::: {.callout-tip title="核心概念：多Agent协作流程图"}

下面就是我们即将构建的"AI退款处理团队"的简化版`LangGraph`流程图。这不仅是代码的蓝图，更是我们理解复杂协作模式的思维工具。

```{mermaid}
#| code-fold: false
#| fig-cap: "多Agent协作流程图"

graph TD
    A[用户请求: "我要退款"] --> B{主管Agent决策};
    B -- "需与用户沟通" --> C[客服Agent: 澄清问题];
    B -- "需查询订单" --> D[订单Agent: 调用get_order_history];
    B -- "需执行退款" --> E[财务Agent: 调用process_refund];
    B -- "任务已完成" --> F((向用户报告结果));
    
    C --> B;
    D --> B;
    E --> B;

    subgraph "专业工具箱"
        D -.-> D_Tool(get_order_history);
        E -.-> E_Tool(process_refund);
    end
```

从这张图中我们可以清晰地看到：

*   **中央枢纽:** `主管Agent`是所有流程的中心。它的核心职责是"路由"，而不是"执行"。
*   **专业分工:** 每个`专员Agent`都有自己独立的、受限的任务和工具。这保证了系统的安全性和专业性。
*   **循环协作:** 所有专员完成工作后，都会将结果交还给`主管`进行下一步决策，形成一个"主管决策 -> 专员执行 -> 返回主管"的高效协作闭环。

在接下来的实践中，我们将用代码将这张蓝图变为现实。
::: 