---
title: "3.3 安装项目所需库：扩充你的武器库"
---

## **Why：为项目准备弹药**

我们已经搭建好了开发环境，就像一个士兵拥有了一把好枪。但要上战场，还需要配备各种不同类型的"弹药"——也就是Python的第三方库。

在接下来的项目中，我们将主要依赖以下几个核心的库，它们是数据科学和机器学习领域的"瑞士军刀"：

*   **Pandas**：用于数据读取、清洗、处理和分析的王者。
*   **Scikit-learn**：提供大量经典机器学习算法、预处理工具和评估指标，是入门机器学习的首选。
*   **Seaborn & Matplotlib**：用于数据可视化的强大组合，能帮你将枯燥的数据转化为直观的图表。

现在，让我们来把这些"弹药"装填进我们的武器库。

## **Practice：指挥AI为你生成安装命令**

我们将使用Anaconda的包管理器 `conda` 来安装这些库。`conda` 在处理复杂的库依赖关系时表现非常出色。

::: {.callout-warning title="动手练习与挑战"}

**任务：安装核心机器学习库**

1.  打开你的系统终端（Terminal / Anaconda Prompt）。
2.  向你的AI助手提问：

> **# 角色**
> 你是一位Python环境配置专家，尤其精通`conda`命令。
>
> **# 任务**
> 我需要使用`conda`命令，一次性安装几个用于机器学习的Python库。
>
> **# 上下文**
> * 我已经成功安装了Anaconda。
> * 我需要安装的库包括：`pandas`, `scikit-learn`, `seaborn`, `matplotlib`。
>
> **# 输出格式要求**
> 请直接给我一条**单行**的、可以**直接复制粘贴**到终端里运行的`conda install`命令。请确保命令格式正确无误，并使用`-y`参数来跳过确认步骤，让安装自动进行。

3.  **复制并执行**：从AI的回答中复制那条命令，粘贴到你的终端里，然后按Enter执行。
4.  **观察输出**：终端会开始下载并安装这些库。你可以看到安装的过程信息滚动。如果没有出现红色的"Error"字样，就代表安装顺利。

:::

::: {.callout-tip title="核心概念：Conda vs. Pip"}

你可能听说过`pip`，它是Python官方的包管理器。`pip`和`conda`是什么关系？

*   **管理范围**：`pip`只能管理Python包。`conda`不仅能管理Python包，还能管理非Python的依赖（如C++编译的库），甚至Python解释器本身。
*   **依赖解析**：`conda`在安装前会检查所有包的依赖关系，确保它们之间不会冲突，这在科学计算领域尤为重要。`pip`的依赖解析能力相对较弱。
*   **通用规则**：一个好的实践是，**在一个conda环境中，尽量只使用`conda`来安装包**。只有当一个包在conda的仓库中不存在时，才考虑使用`pip`作为补充。

在本教程中，我们将优先使用`conda`。
::: 