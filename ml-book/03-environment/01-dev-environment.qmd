# 3.1 你的工具清单：Python, Jupyter与VS Code

## **Why：搭建我们的一体化"驾驶舱"**

在开启任何复杂的工程之前，首先要做的都是搭建一个功能强大、运行顺畅的工作台。对于"AI指挥家"而言，这个工作台就是我们的开发环境。一个好的环境能让我们专注于思考和创造，而一个糟糕的环境则会让我们把大量时间浪费在琐碎的配置问题上。

本节我们将一次性配置好三大核心工具，构成我们现代化、一体化的"驾驶舱"：

1.  **Anaconda**: 它是我们选择的Python"全家桶"解决方案。它不仅包含了Python语言本身，还自带了强大的包管理器`conda`和环境隔离功能，是处理复杂科学计算任务最稳妥的基石。
2.  **Visual Studio Code (VS Code)**: 这是目前全球最受欢迎的现代化代码编辑器。它功能强大、插件生态丰富，是我们的"驾驶舱"的主体框架。
3.  **Jupyter插件 (in VS Code)**: 这是VS Code的王牌插件之一。它让我们能在功能强大的VS Code中，完美地享受Jupyter Notebook的交互式编程体验，这对于数据探索和模型实验至关重要。

我们的目标是：将这三者无缝衔接，打造一个让你沉浸于AI协同开发的实验场。

## **Practice：指挥AI指导你完成安装与配置**

安装和配置软件的界面、步骤总是在不断变化，任何静态的截图教程都可能很快过时。因此，我们采用最智能、最面向未来的方式：**指挥AI为你生成针对你个人情况的、最新的安装与配置指南**。

这个过程分为三步：安装Anaconda、安装VS Code、在VS Code中配置Jupyter。

::: {.callout-warning title="动手练习与挑战"}

### **第一步：安装Anaconda**

打开你的AI助手，使用下面的Prompt模板向它提问：

> **# 角色**
> 你是一位熟悉软件安装和环境配置的IT支持专家。
>
> **# 任务**
> 我需要为我的机器学习项目安装Anaconda。我的操作系统是 **[请在这里填写你的操作系统，如：Windows 11 / macOS Sonoma]**。我是一个编程初学者，需要最详细、最不容易出错的步骤。
>
> **# 输出格式要求**
> 请为我提供一个端到端的安装指南，包括：
> 1. Anaconda的官方下载链接。
> 2. 我应该选择哪个版本？
> 3. 安装过程中有哪些需要特别注意的选项？
> 4. 安装完成后，我应该如何验证安装是否成功？请提供可以复制到终端里运行的命令。

---

### **第二步：安装VS Code**

继续向你的AI助手提问：

> 请给我VS Code的官方下载链接，并告诉我如何为我的操作系统（[你的系统]）进行安装。

---

### **第三步：在VS Code中配置Jupyter环境**

这是将所有工具串联起来的最关键一步。你需要告诉VS Code里的Jupyter，去使用我们刚才安装的Anaconda环境。请向AI发送一个包含更详细上下文的Prompt：

> **# 角色**
> 你是VS Code和Jupyter方面的专家。
>
> **# 任务**
> 我需要将在VS Code中运行的Jupyter Notebook，与我之前安装的Anaconda环境关联起来。
>
> **# 上下文**
> 我已经按照你的指导，成功安装了Anaconda和VS Code。我也在VS Code中通过插件市场安装了官方的"Jupyter"插件。
>
> **# 输出格式要求**
> 请用图文并茂的方式，一步步告诉我：
> 1. 如何在VS Code中创建一个新的Jupyter Notebook文件 (`.ipynb`)。
> 2. 我应该在VS Code的哪个位置选择或切换Jupyter的"内核"(Kernel)?
> 3. 如何确保我选择的内核，是指向我通过Anaconda安装的那个Python解释器？
> 4. 我应该在Notebook的第一个代码单元格里输入什么来测试一切是否正常？

:::

请严格、耐心地跟随AI的指引完成以上所有步骤。这个过程完美地模拟了真实开发中"配置工具链"的场景。当你成功在VS Code的Jupyter Notebook中运行第一行Python代码时，你的"驾驶舱"就宣告搭建完毕！ 