---
title: "3.2 VS Code与Jupyter：现代化的实验场"
---

## **Why：我们选择什么样的"代码编辑器"？**

代码编辑器，或者说IDE（集成开发环境），是"AI指挥家"日常工作的"驾驶舱"。对于数据科学和机器学习任务，我们的"驾驶舱"需要具备强大的**交互性**，能够让我们方便地执行一小段代码、立刻看到结果、并进行可视化。

**Jupyter Notebook** 是为此而生的王者。它允许我们将代码、文本、图片、公式都组织在一个文档中，非常适合进行探索性的数据分析。

而 **Visual Studio Code (VS Code)** 是目前最受欢迎的现代化代码编辑器。它拥有一个强大的Jupyter插件，可以让我们在功能齐全的IDE中，享受Jupyter Notebook的所有便利。

**VS Code + Jupyter 插件** 的组合，就是我们为本次旅程选择的、兼具强大功能和易用性的"驾驶舱"。

## **Practice：指挥AI指导你配置**

和安装Anaconda一样，我们将继续使用"AI协同"的模式来完成配置。

::: {.callout-warning title="动手练习与挑战"}

**任务：配置VS Code的Jupyter环境**

1.  **安装VS Code**：
    *   向你的AI助手提问："请给我VS Code的官方下载链接，并告诉我如何为我的操作系统（[你的系统]）进行安装。"
2.  **安装Jupyter插件**：
    *   打开安装好的VS Code。
    *   向AI提问："请告诉我如何在VS Code中找到并安装'Jupyter'官方插件？最好能配上截图说明。"
3.  **创建你的第一个Notebook文件**：
    *   向AI提问："我已经在VS Code里装好了Jupyter插件，如何创建一个新的Jupyter Notebook文件（`.ipynb`文件）？"
4.  **关联Anaconda环境**：
    *   这是最关键的一步。你需要告诉VS Code里的Jupyter，使用我们刚才安装的Anaconda环境中的Python。
    *   向AI提问（这个问题需要提供更详细的上下文）：

> **# 角色**
> 你是VS Code和Jupyter方面的专家。
>
> **# 任务**
> 我需要将我在VS Code中打开的Jupyter Notebook，与我之前安装的Anaconda环境关联起来。
>
> **# 上下文**
> * 我已经安装了Anaconda和VS Code，以及VS Code的Jupyter插件。
> * 我已经在VS Code中创建并打开了一个`.ipynb`文件。
>
> **# 输出格式要求**
> 请用图文并茂的方式，一步步告诉我：
> 1.  我应该在VS Code的哪个位置选择或切换Jupyter的"内核"(Kernel)?
> 2.  如何确保我选择的内核，是指向我通过Anaconda安装的那个Python解释器？

5.  **运行你的第一行代码**：
    *   在新建的Notebook的第一个代码单元格（cell）中，输入 `print("Hello, AI Conductor!")`。
    *   按 `Shift + Enter` 运行它。如果你能看到下方输出了 `Hello, AI Conductor!`，那么恭喜你，你的现代化实验场已经搭建完毕！

:::

这个过程可能比单纯安装一个软件要复杂，但它完美地模拟了真实开发中"配置工具链"的场景。请耐心、细致地与AI对话，解决你遇到的每一个小问题。 