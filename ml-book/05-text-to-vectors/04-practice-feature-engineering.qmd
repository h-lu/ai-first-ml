# 5.4 Practice: 指挥AI完成文本特征工程

## 从理论到代码：AI协同的特征工程流程

理论知识已经完备，现在是时候将它们付诸实践了！在本节中，我们将扮演"项目总监"的角色，通过向AI助手下达一系列精确指令，来完成AIGC内容质检项目的文本特征工程。

### 我们的目标
将原始的文本数据（`content`列）转换为一个高维的TF-IDF特征矩阵，为下一章的分类器训练做好准备。

### AI协同工作流
我们将把复杂的任务分解为一系列清晰的步骤，并在每一步都与AI进行协作：
1.  **数据准备**：加载并预处理数据。
2.  **文本清洗**：去除噪声，为向量化做准备。
3.  **TF-IDF向量化**：使用`scikit-learn`进行核心转换。
4.  **结果分析**：检查并理解生成的特征矩阵。

---

## 步骤一：数据加载与准备

在开始特征工程之前，我们需要准备好干净的数据。

:::{.callout-tip title="AI指令模板：数据准备" icon="fas fa-robot"}
**# 角色**
你是一位熟练使用Pandas库的Python数据科学家。

**# 上下文**
我正在进行一个文本分类项目，需要从`aigc_content.csv`文件中加载数据，并为文本特征工程做准备。

**# 任务**
请帮我编写一段Python代码，完成以下操作：
1.  使用Pandas加载`aigc_content.csv`文件。
2.  检查`content`列是否有缺失值（NaN）。如果有，请用一个空字符串填充它们。
3.  为了加快处理速度，请从数据集中随机抽取5000条样本（如果数据集小于5000条，则使用全部数据）。
4.  将处理后的`content`列和`label`列分别赋值给变量`X_text`和`y`。
5.  打印出`X_text`和`y`的长度，确保它们匹配。

**# 输出格式**
请提供可以直接运行的Python代码，并附上清晰的注释。
:::

---

## 步骤二：AI辅助的文本清洗

"Garbage in, garbage out." 高质量的特征始于高质量的文本。我们需要清洗文本，去除与语义无关的噪声。

:::{.callout-tip title="AI指令模板：文本清洗函数" icon="fas fa-robot"}
**# 角色**
你是一位精通正则表达式和文本处理的Python专家。

**# 任务**
请帮我编写一个名为`clean_text`的Python函数，它接收一个文本字符串作为输入，并执行以下清洗操作：
1.  将所有文本转换为小写。
2.  去除所有HTML标签。
3.  去除URL链接。
4.  去除邮箱地址。
5.  去除数字和标点符号，但保留中文字符和英文字母。
6.  去除多余的空格（例如，将多个连续空格替换为单个空格）。

**# 要求**
-   请大量使用正则表达式（`re`库）来完成这些任务。
-   为函数的每个步骤添加注释，解释对应的正则表达式的作用。
-   函数最终应返回一个清洗后的文本字符串。

**# 输出格式**
提供完整的Python函数定义代码。
:::

**应用清洗函数：**
在你拿到AI生成的`clean_text`函数后，你可以这样应用它：

```python
# 假设你已经有了X_text
cleaned_X_text = X_text.apply(clean_text)

# 打印清洗前后的对比
print("Original Text:", X_text.iloc[0])
print("Cleaned Text:", cleaned_X_text.iloc[0])
```

---

## 步骤三：核心任务 - TF-IDF向量化

现在，我们到达了本章的核心环节：将清洗后的文本转换为TF-IDF向量。我们将使用`scikit-learn`库中功能强大的`TfidfVectorizer`。

:::{.callout-tip title="AI指令模板：TF-IDF向量化" icon="fas fa-robot"}
**# 角色**
你是一位经验丰富的机器学习工程师，擅长使用`scikit-learn`进行特征工程。

**# 上下文**
我已经准备好了清洗后的文本数据（一个Pandas Series，名为`cleaned_X_text`）。现在我需要将其转换为TF-IDF特征矩阵。

**# 任务**
请帮我编写一段Python代码，完成以下任务：
1.  从`sklearn.feature_extraction.text`导入`TfidfVectorizer`。
2.  **实例化`TfidfVectorizer`**，并配置以下关键参数：
    *   `max_df=0.95`：忽略在超过95%的文档中出现的词（过滤掉语料库范围内的停用词）。
    *   `min_df=2`：忽略在少于2个文档中出现的词（过滤掉罕见词和可能的拼写错误）。
    *   `max_features=10000`：最终的词汇表大小限制为10000个特征。
    *   `stop_words='english'`：使用内置的英文停用词列表。
    *   `ngram_range=(1, 2)`：同时考虑单个词（unigram）和两个连续的词（bigram）作为特征。
3.  使用`.fit_transform()`方法拟合文本数据并将其转换为TF-IDF矩阵。将结果保存在变量`tfidf_matrix`中。
4.  打印出`tfidf_matrix`的形状（shape），让我们知道生成了多少样本和多少特征。
5.  打印出转换后特征矩阵的稀疏度。

**# 输出格式**
提供可以直接运行的Python代码，并对每个参数的作用进行简要注释。
:::

---

## 步骤四：结果分析与洞察

仅仅生成矩阵是不够的，我们需要理解它。让我们向AI提问，来探索这个新生成的特征空间。

### 探索1：查看词汇表

:::{.callout-tip title="AI指令模板：查看词汇表" icon="fas fa-robot"}
**# 角色**
你是我的`scikit-learn`调试助手。

**# 上下文**
我已经使用`TfidfVectorizer`创建了一个名为`vectorizer`的实例，并用它生成了`tfidf_matrix`。

**# 任务**
请告诉我如何：
1.  获取`vectorizer`学习到的完整词汇表（vocabulary）。
2.  随机打印出词汇表中的20个词，让我对特征有个直观感受。
3.  获取IDF（逆文档频率）权重最高的10个词和最低的10个词。

**# 输出格式**
提供代码片段来完成这些任务。
:::

**预期结果分析：**
-   **IDF最高的词** 应该是那些具有高度区分性的专业术语或特定领域的词汇。在我们的项目中，这可能是与"有害内容"或"优质内容"强相关的词。
-   **IDF最低的词** 应该是那些在语料库中非常常见的词，但又没有被停用词表过滤掉的词。

### 探索2：检查一个样本的向量

让我们看看单个文档是如何被表示的。

:::{.callout-tip title="AI指令模板：检查单个向量" icon="fas fa-robot"}
**# 角色**
你是我的`scikit-learn`和`pandas`结合使用专家。

**# 上下文**
我有`vectorizer`、`tfidf_matrix`和原始文本`cleaned_X_text`。

**# 任务**
请帮我编写一段代码，实现以下功能：
1.  选择`tfidf_matrix`中的第一行（代表第一个文档）。
2.  将这个稀疏向量转换为一个更易于阅读的格式，例如一个Pandas DataFrame。
3.  这个DataFrame应该有两列：`term`（词汇）和`tfidf_score`（对应的TF-IDF权重）。
4.  只显示该文档中TF-IDF分数大于0的词汇。
5.  按TF-IDF分数降序排列。
6.  最后，打印出原始的文本文档和这个排序后的TF-IDF分数表，方便我对比。

**# 输出格式**
提供一个完整的、可复用的代码片段。
:::

**预期结果分析：**
通过这个分析，你可以直观地看到对于一篇具体的AIGC内容，哪些词被认为是"关键词"。这对于理解模型决策和进行错误分析非常有帮助。

---

## 本章项目成果与总结

恭喜你！通过与AI的协同，我们已经成功地将非结构化的文本数据，转换为了机器学习模型可以"阅读"的结构化特征矩阵。

### 我们的成果
-   一个经过清洗和预处理的文本数据集。
-   一个包含10000个特征（包括unigram和bigram）的TF-IDF特征矩阵。
-   一套可复用的AI指令和代码，用于未来的文本特征工程任务。

### 核心收获
1.  **任务分解**：你学会了如何将一个复杂的工程任务（文本特征工程）分解为一系列可以清晰地委托给AI的子任务。
2.  **参数化思维**：你理解了像`TfidfVectorizer`这样的工具中，各个参数（如`max_df`, `min_df`, `ngram_range`）如何影响最终的特征质量。
3.  **从生成到洞察**：你不仅生成了特征，还学会了如何通过进一步提问来分析和理解这些特征。

### 展望下一章
我们的数据已经准备就绪，就像为一顿大餐备好了所有食材。在下一章，我们将正式开始"烹饪"——训练我们的第一个分类器，让它学习如何从这些TF-IDF特征中识别出不同质量等级的AIGC内容。一场激动人心的模型训练之旅即将开启！ 