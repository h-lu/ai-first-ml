---
title: "4.3 实践：指挥AI完成首次探索性数据分析(EDA)"
---

## **Practice：下达你的第一份"数据分析委托书"**

现在，我们已经将CEO的危机感，转化为了一个清晰的、可执行的机器学习任务。我们有了目标（三分类），也理解了核心概念（特征、标签、模型）。

在真正开始"训练厨师"（建立模型）之前，我们必须先**仔细检查我们的"食材"（数据）**。这个过程，就是**探索性数据分析（Exploratory Data Analysis, EDA）**。

EDA的目标是：**在AI的协助下，从原始数据中发现规律、验证假设、识别异常，并为后续的特征工程和模型构建提供灵感。**

在传统的学习模式中，你可能需要记住Pandas和Matplotlib的大量函数才能开始。但在AI-First的模式下，你的核心任务是**构思一份详尽的、结构化的"数据分析委托书"（Prompt）**，然后将具体的绘图和计算工作，交给你的AI助手去完成。

---

### **第一步：让AI为你生成并加载模拟数据**

在真实项目中，你会从公司的数据库中获取数据。为了方便练习，我们先指挥AI生成一份高质量的模拟数据。

::: {.callout-warning title="动手练习：生成数据"}

**任务**：
打开你的AI编程助手（如Copilot Chat或Cursor），在你的Jupyter Notebook中，向它下达以下指令：

> 请用Python的Pandas和Faker库，为我生成一个用于AIGC内容质检的模拟数据集。
>
> **要求如下：**
> 1.  文件名：`aigc_quality_data.csv`
> 2.  总行数：1000行
> 3.  列定义：
>     *   `text`: (字符串) 模拟的AIGC生成文本，需要有英文和中文内容。
>     *   `word_count`: (整数) `text`列的单词数。
>     *   `category`: (字符串) 内容类型，从 `['营销文案', '产品描述', '博客文章', '技术文档']` 中随机选择。
>     *   `label`: (字符串) 质量标签，从 `['优质', '低质', '有害']` 中选择。
> 4.  **数据模拟逻辑**:
>     *   请让数据分布**不均衡**，其中'优质'标签约占60%，'低质'约占30%，'有害'约占10%。
>     *   请让不同`label`的`text`内容有逻辑上的差异。例如：'有害'文本可以包含一些不恰当的词汇；'低质'文本可以有一些语法错误或重复；'优质'文本则应该看起来更通顺、更专业。
>     *   `word_count`应该与`label`相关，例如'优质'文章普遍更长。
> 5.  最终将生成的DataFrame保存到`aigc_quality_data.csv`文件中。

**执行**：
运行AI生成的代码，你应该可以在文件目录中看到`aigc_quality_data.csv`文件。

:::

---

### **第二步：委托AI进行全方位EDA**

现在，我们有了"食材"。接下来，就是最关键的一步：向你的AI助手发出一份全面、清晰的EDA委托书。

::: {.callout-warning title="动手练习：执行EDA"}

**任务**：
在Jupyter Notebook的一个新单元格中，向你的AI编程助手粘贴并执行以下这份精心设计的Prompt。

> **# 角色**
> 你是一位资深的数据分析师，精通Python的Pandas, Matplotlib和Seaborn库。你的任务是为我提供一份关于AIGC内容质量数据集的、图文并茂的探索性数据分析报告。
>
> **# 上下文**
> *   我已经准备好了一个名为 `aigc_quality_data.csv` 的数据集。
> *   这个数据集包含以下列: `text`, `word_count`, `category`, `label`。
> *   项目的目标是基于这些数据，建立一个模型来预测`label`。
> *   请使用中文进行注释和出图。
>
> **# 任务：请生成一份完整的Python EDA报告代码，包含以下所有分析步骤：**
>
> **1. 数据加载与概览**
>    *   使用Pandas加载 `aigc_quality_data.csv`。
>    *   打印DataFrame的头部(`head`)、基本信息(`info`)和数值列的描述性统计(`describe`)。
>    *   检查并报告任何缺失值。
>
> **2. 目标变量分析 (`label`)**
>    *   计算`label`列中每个类别的计数和百分比。
>    *   使用Seaborn绘制一个**柱状图**，清晰地展示各个质量标签的分布情况，并在图上显示具体数量。
>
> **3. 文本长度分析 (`word_count`)**
>    *   使用Seaborn绘制一个**箱线图 (Box Plot)**，对比不同`label`下的`word_count`分布情况。
>    *   使用Seaborn绘制一个**小提琴图 (Violin Plot)**，用不同的颜色展示不同`label`的`word_count`分布，以观察其密度。
>
> **4. 内容类型分析 (`category`)**
>    *   使用Pandas的`crosstab`函数，创建一个`category`和`label`的交叉表。
>    *   基于这个交叉表，使用Seaborn绘制一个**堆叠柱状图**，展示在不同内容类型中，各种质量标签的分布情况。
>
> **5. 文本内容初步探索**
>    *   从每个`label`类别中，随机抽取并展示2条`text`样本，让我们对文本内容有一个直观感受。
>
> **6. 综合洞察总结**
>    *   在所有代码和图表的最后，请用Markdown格式，为我生成一份总结报告。这份报告应该包括：
>        *   **主要发现 (Key Findings)**：用点状列表总结出2-3个最重要的数据洞察。
>        - **数据质量问题 (Data Quality Issues)**：指出数据中可能存在的问题（如，类别不平衡）。
>        *   **下一步建议 (Next Step Suggestions)**：基于你的发现，为接下来的特征工程或模型选择，提出1-2个具体建议。
>
> **# 输出格式要求**
> *   请生成一段可以直接在Jupyter Notebook中运行的、组织良好、注释清晰的Python代码。
> *   所有的图表都应该有明确的标题和坐标轴标签。
> *   请使用`seaborn.set_style("whitegrid")`以获得美观的图表风格。

**执行**：
运行AI生成的代码。耐心等待它完成所有的分析和绘图。

:::

当你执行完这个Prompt，你就完成了一次典型的、由AI辅助的EDA流程。请仔细阅读AI生成的报告和图表，并思考它为你揭示了哪些关于数据的"秘密"。这正是"AI指挥家"工作的核心价值所在。 